name: Release

on:
  push:
    tags:
    - "v*"
    branches:
    - "main"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:       
  releases:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '>=1.21.0'

    - name: Build Binaries
      run: |
        # Linux
        GOOS=linux GOARCH=amd64 BUILDPATH=./bin/container-demo-linux-amd64 make
        GOOS=linux GOARCH=arm BUILDPATH=./bin/container-demo-linux-arm make
        GOOS=linux GOARCH=arm64 BUILDPATH=./bin/container-demo-linux-arm64 make
        GOOS=linux GOARCH=386 BUILDPATH=./bin/container-demo-linux-386 make
        # Windows
        GOOS=windows GOARCH=amd64 BUILDPATH=./bin/container-demo-windows-amd64.exe make
        GOOS=windows GOARCH=arm BUILDPATH=./bin/container-demo-windows-arm.exe make
        GOOS=windows GOARCH=386 BUILDPATH=./bin/container-demo-windows-386.exe make
        # Darwin
        GOOS=darwin GOARCH=amd64 BUILDPATH=./bin/container-demo-darwin-amd64 make
        GOOS=darwin GOARCH=arm64 BUILDPATH=./bin/container-demo-darwin-arm64 make
        # Freebsd
        GOOS=freebsd GOARCH=amd64 BUILDPATH=./bin/container-demo-freebsd-amd64 make
        GOOS=freebsd GOARCH=386 BUILDPATH=./bin/container-demo-freebsd-386 make
        GOOS=freebsd GOARCH=arm BUILDPATH=./bin/container-demo-freebsd-arm make

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        draft: true
        artifacts: "./bin/*"

  packages:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.21.0'

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}